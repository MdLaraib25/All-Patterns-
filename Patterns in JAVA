import java.util.*;

public class main {

    // Square Pattern 
    public static void pattern1(int n){

        for(int i =0;i<n;i++){
            for(int j =0;j<=n;j++){
                System.out.print("* ");
            }
            System.out.println();
        }
     
    }

    // Right-Angled Triangle (Stars)
    public static void pattern2(int n){
        for(int i =0;i<n;i++){
            for(int j =0;j<=i;j++){
                System.out.print("* ");
            }
            System.out.println();
        }
    }
    // Right-Angled Number Triangle
    public static void pattern3(int n){
        for(int i =1;i<=n;i++){
            for(int j =1;j<=i;j++){
                System.out.print(j);
            }
            System.out.println();
        }
    }
    //  Repeated Number Triangle
    public static void pattern4(int n){
        for(int i =1;i<=n;i++){
            for(int j =1;j<=i;j++){
                System.out.print(i);
            }
            System.out.println();
        }
    }
    // Inverted Star Triangle
    public static void pattern5(int n){
        for(int i =0;i<n;i++){
            for(int j=1;j<n-i+1;j++){
                System.out.print("* ");
            }
            System.out.println();
        }
    }

    // Inverted Number Triangle
    public static void pattern6(int n){
        for(int i =0;i<n;i++){
            for(int j=1;j<n-i+1;j++){
                System.out.print(j);
            }
            System.out.println();
        }
    }

    // Pyramid Pattern (Full Pyramid)
    public static void pattern7(int n){
        for(int i=0;i<n;i++){
            for(int j=0;j<n-i-1;j++){   // for space 
                System.out.print(" ");
            }
            for(int j=0;j<2*i+1;j++){  // for stars 
                System.out.print("*");
            }
             for(int j=0;j<n-i-1;j++){   // for space 
                System.out.print(" ");
            }
            System.out.println();
        }
    }
    //  Inverted Full Pyramid
    public static void pattern8(int n){
        for(int i=0;i<n;i++){
            for(int j=0;j<i;j++){   // for space 
                System.out.print(" ");
            }
            for(int j=0;j<2*n-(2*i+1);j++){  // for stars 
                System.out.print("*");
            }
             for(int j=0;j<n-i-1;j++){   // for space 
                System.out.print(" ");
            }
            System.out.println();
        }
    }
    //  Diamond Half Pattern
    public static void pattern9(int n){
     for(int i =1;i<=2*n-1; i++){
         int stars =i;
         if (i>n) stars = 2*n-i;
         for(int j =1;j<stars;j++){
            System.out.print("*");
         }
         System.out.println();
       }
    }
    //  Binary Number Triangle
    public static void pattern10(int n){
        int start =1;
        for(int i=0;i<n;i++){
            if(i%2==0) start =1;
            else start =0;
            for(int j =0;j<=i;j++){
                System.out.print(start);
                start = 1-start;
            }
            System.out.println();
        }
    }

    //  Palindromic Number Pyramid
    public static void pattern11(int n){
        for(int i =1;i<=n;i++){
            for(int j =1;j<=i;j++){
                System.out.print(j);
            }
            for(int j =1;j<=2*(n-i);j++){
                System.out.print(" ");
            }
            for(int j =i;j>=1;j--){
                System.out.print(j);
            }
            System.out.println();
        }
    }
    //  Floydâ€™s Triangle
    public static void pattern12(int n){
        int num =1;
        for(int i =1;i<=n;i++){
            for(int j=1;j<=i;j++){
                System.out.print(num +" ");
                num++;
            }
            System.out.println();
        }
    }
    //  Increasing Alphabet Triangle
    public static void pattern13(int n){
        for(int i =0;i<n;i++){
            for(char ch ='A';ch<=  'A'+i;ch++){
                System.out.print(ch + " ");
            }
            System.out.println();
        }
    }

    // Inverted Alphabet Triangle
    public static void pattern14(int n){
        for(int i =0;i<n;i++){
            for(char ch ='A';ch<='A' + (n-i-1);ch++){
                System.out.print(ch + " ");
            }
             System.out.println(); 
        }
    }

    //  Repeated Alphabet Triangle
    public static void pattern15(int n){
        for(int i =0;i<n;i++){
             char ch = (char)('A' +i);
            for(int j =0 ;j<=i;j++){
                System.out.print(ch + " ");
               
            }
            System.out.println();
        }
    }
    
    //  Alphabet Palindromic Pyramid (Symmetric A-Z)

    public static void pattern16(int n){
        for(int i =0;i<n;i++){
            for(int j =0;j<=(n-i-1);j++){
                System.out.print(" ");
            } 
            char ch = 'A';
            int breakpoint = (2*i+1)/2;
            for(int j =1;j<=2*i+1;j++){
                System.out.print(ch);
               if (j<= breakpoint) ch++;
               else ch--;
            }
            for(int j =0;j<=(n-i-1);j++){
                System.out.print(" ");
            }
            System.out.println();
        }
    }
    public static void main(String[] args) {
         Scanner sc = new Scanner(System.in);   
         int n = sc.nextInt();
         // Calling the function 
        // pattern1(n);
        // pattern2(n);
        // pattern3(n);
        // pattern4(n);
        // pattern5(n);
        // pattern6(n);
        // pattern7(n);
        // pattern8(n);
        // pattern9(n);
        // pattern10(n);
        // pattern11(n);
        // pattern12(n);
        // pattern13(n);
        // pattern14(n);
        // pattern15(n);
        // pattern16(n);
    }
   
}
